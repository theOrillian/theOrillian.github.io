<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Theorillian on Orillian</title>
    <link>https://orillian.com/categories/theorillian/index.xml</link>
    <description>Recent content in Theorillian on Orillian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>greg@orillian.com (Greg Graham)</managingEditor>
    <webMaster>greg@orillian.com (Greg Graham)</webMaster>
    <copyright>(c) 2017 Orillian.</copyright>
    <atom:link href="https://orillian.com/categories/theorillian/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Up and running with Hugo</title>
      <link>https://orillian.com/2017/02/20/up-and-running-with-hugo/</link>
      <pubDate>Mon, 20 Feb 2017 09:26:32 -0500</pubDate>
      <author>greg@orillian.com (Greg Graham)</author>
      <guid>https://orillian.com/2017/02/20/up-and-running-with-hugo/</guid>
      <description>&lt;p&gt;Like all new technologies, this will be a learn-as-you-go process. This post describes the process of creating and developing &lt;a href=&#34;https://orillian.com&#34; target=&#34;_blank&#34;&gt;theOrillian&lt;/a&gt; website. This post will serve as my learn-as-you-go test post. As new features are discovered/implemented, the post will be updated.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h1 id=&#34;day-1-stand-up-the-development-environment&#34;&gt;Day 1 - Stand up the development environment&lt;/h1&gt;

&lt;p&gt;Use the &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34; target=&#34;_blank&#34;&gt;Hugo Quickstart Guide&lt;/a&gt; to get rolling. Here you&amp;rsquo;ll find a reference to the &lt;a href=&#34;https://gohugo.io/overview/installing/&#34; target=&#34;_blank&#34;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Use GitHub&amp;rsquo;s &lt;a href=&#34;https://guides.github.com/features/mastering-markdown&#34; target=&#34;_blank&#34;&gt;Mastering Markdown&lt;/a&gt; to get started with adding some format to your blog post. Hugo uses &lt;a href=&#34;https://github.com/russross/blackfriday&#34; target=&#34;_blank&#34;&gt;Blackfriday&lt;/a&gt; markdown engine which has a few additional features.&lt;/p&gt;

&lt;p&gt;Markdown does not support opening links to a new browser tab. To have links open in new tabs, you need to write the HTML yourself - &lt;code&gt;&amp;lt;a href=&amp;quot;https://orillian.com&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;theOrillian&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This site uses &lt;a href=&#34;https://github.com/enten/hyde-y&#34; target=&#34;_blank&#34;&gt;Hyde-Y&lt;/a&gt; theme. If you plan on using this theme, you need to edit the &lt;strong&gt;config.toml&lt;/strong&gt;, &lt;strong&gt;data/Menu.toml&lt;/strong&gt; &amp;amp; &lt;strong&gt;data/FootMenu.toml&lt;/strong&gt; as shown in the theme configuration instructions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gohugo.io/content/summaries/&#34;&gt;Blog summaries&lt;/a&gt; can be controlled by using &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Start to finish, the initial developer version stand-up of this site using Hugo took about 2 hours. No knowledge of Go or Javascript or CSS was required.&lt;/p&gt;

&lt;h1 id=&#34;day-2-publish-the-website&#34;&gt;Day 2 - Publish the website&lt;/h1&gt;

&lt;p&gt;Today I messed up. As a seasoned IT pro and I still mess up sometimes. I was worrying about taxonomies and creating a &amp;laquo;blog series&amp;raquo; instead of just accomplishing my goal - use Hugo to generate the &lt;a href=&#34;orillian.com&#34; target=&#34;_blank&#34;&gt;orillian.com&lt;/a&gt; website!&lt;/p&gt;

&lt;p&gt;I wasted several hours and did not accomplish my goal. I&amp;rsquo;ll try again tomorrow.&lt;/p&gt;

&lt;h1 id=&#34;day-3-part-1-publish-the-website&#34;&gt;Day 3 - Part #1: Publish the website&lt;/h1&gt;

&lt;p&gt;I chose to publish to GitHub Pages, but if I was doing it again, I&amp;rsquo;d choose to push to Google&amp;rsquo;s Firebase. That would eliminate the Cloudflare setup and provide the additional benefits listed in the blog post &lt;a href=&#34;https://www.leowkahman.com/2016/07/14/static-blog-generated-by-hugo-hosted-on-google-firebase/&#34; target=&#34;_blank&#34;&gt;Static blog generated by Hugo, hosted on Google Firebase&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Choosing a hosting provider&lt;/p&gt;

&lt;p&gt;I narrowed down my options to two; GitHub Pages and Google Firebase. Both
support use of custom domain name. I chose Firebase because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Valid SSL is provided for custom domain free of charge.&lt;/li&gt;
&lt;li&gt;Hosted content is propagated all over the world via Googleâ€™s super fast CDN.&lt;/li&gt;
&lt;li&gt;HTTP Cache-Control header can be customized by file name pattern; i.e. images are cached for 1 year while HTML content can be given a short expiry.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;deploying-to-github-pages&#34;&gt;Deploying to GitHub Pages&lt;/h3&gt;

&lt;p&gt;Follow the step-by-step instructions on &lt;a href=&#34;http://whipperstacker.com/2015/11/27/deploying-a-stand-alone-hugo-site-to-github-pages-mapped-to-a-custom-domain/&#34; target=&#34;_blank&#34;&gt;Deploying a Stand-Alone Hugo Site to GitHub Pages Mapped to a Custom Domain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A couple of things that slowed down my progress were:
* the repository that needed to be created was &lt;code&gt;&amp;lt;userName&amp;gt;.github.io&lt;/code&gt;, not &lt;code&gt;github.io&lt;/code&gt; in theOrillian user GitHub account.
* the &lt;code&gt;config.toml&lt;/code&gt; needed to be altered, setting &lt;code&gt;baseurl = &amp;quot;http://theOrillian.github.io/&amp;quot;&lt;/code&gt; &lt;strong&gt;&lt;em&gt;Don&amp;rsquo;t forget the final &amp;lsquo;/&amp;rsquo;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I pinched and updated a deploy script from GitHub user @sgylon:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#!/bin/bash

# Build the project.
echo -e &amp;quot;\033[0;32mUsing Hugo to generate static website...\033[0m&amp;quot;
rm -rf public/*
hugo

echo -e &amp;quot;\033[0;32mPushing website source to GitHub...\033[0m&amp;quot;

# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;Rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
      then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source repos.
git push origin master

# Push the build repos.
echo -e &amp;quot;\033[0;32mDeploying website to GitHub...\033[0m&amp;quot;

#cd public &amp;amp;&amp;amp; git add --all &amp;amp;&amp;amp; git commit -m &amp;quot;$msg&amp;quot; &amp;amp;&amp;amp; git push origin master &amp;amp;&amp;amp; cd ..
cd public
git add --all
git commit -m &amp;quot;$msg&amp;quot;
git push origin master
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;day-3-part-2-set-a-custom-domain-for-site&#34;&gt;Day 3 - Part #2: Set a custom domain for site&lt;/h1&gt;

&lt;p&gt;For step-by-step instructions on setting up a custom domain for your site, while using Google Domains, check out &lt;a href=&#34;http://www.curtismlarson.com/blog/2015/04/12/github-pages-google-domains/&#34; target=&#34;_blank&#34;&gt;GitHub Pages using Google Domains&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Your Google Domain can be administrated from &lt;code&gt;domains.google.com&lt;/code&gt;. It took about an hour for the DNS records to propagate. The site says it may take up to 24hours. Grab dinner, walk the dog or get some sleep.&lt;/p&gt;

&lt;p&gt;I wanted to delete the entire public folder before generating and committing the new website. But there were 2 files that I wanted to preserve CNAME and the README.md in the GitHub repository. These files needed to be copied to the Hugo static folder and commited to the Hugo website source.&lt;/p&gt;

&lt;h1 id=&#34;day-3-part-3-serve-custom-domain-with-https&#34;&gt;Day 3 - Part #3: Serve custom domain with https&lt;/h1&gt;

&lt;p&gt;The article I used to configure https for my GitHub Pages is &lt;a href=&#34;https://www.goyllo.com/github/pages/free-cloudflare-ssl-for-custom-domain/&#34; target=&#34;_blank&#34;&gt;How To Add Free Cloudflare SSL in Github Pages with Custom Domain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was almost too easy to set up Cloudflare. Create a free account, then let it discover your current configuration, finally change the DNS server for your domain. Again, the site says it may take up to 24hours. Grab dinner, walk the dog or get some sleep.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>